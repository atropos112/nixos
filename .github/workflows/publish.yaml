name: Build and Release SD Images
on:
  push:
    tags:
      - 'v*.*.*'
jobs:
  build:
    name: Build and Publish SD Image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        device: [opi1, opi2, opi3, opi4]
    steps:
      - uses: actions/checkout@v4
      - name: Install Nix with KVM enabled
        uses: cachix/install-nix-action@v26
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          enable_kvm: true
      - name: Build SD Image
        run: nix build .#sdImage-${{ matrix.device }} --verbose
      - name: Publish Image
        run: |
          mkdir -p ./published-images
          mv ./result/sd-image/*.img.zst ./published-images/${{ matrix.device }}.img.zst
  release:
    name: Create and Upload Release
    needs: build
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: published-images
          path: published-images
      - name: Create release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          gh release create --draft $TAG_NAME --title $TAG_NAME
      - name: Upload release assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          for file in ./published-images/*; do
            gh release upload $TAG_NAME "$file" --clobber
          done
